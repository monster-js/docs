"use strict";(self.webpackChunk_monster_js_docs=self.webpackChunk_monster_js_docs||[]).push([[972],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>v});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),m=a,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(v,i(i({ref:n},p),{},{components:t})):r.createElement(v,i({ref:n},p))}));function v(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6842:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:6},i="Event Handling",c={unversionedId:"main-concept/event-handling",id:"main-concept/event-handling",title:"Event Handling",description:"Event handling is a directive that allows a component to respond to user actions on the UI, such as button clicks, text inputs, dragging elements, and other actions. It uses a directive with the namespace of on or on-prevent to bind a function to an element as an event listener.",source:"@site/docs/main-concept/event-handling.md",sourceDirName:"main-concept",slug:"/main-concept/event-handling",permalink:"/docs/main-concept/event-handling",draft:!1,editUrl:"https://github.com/monster-js/documentation/docs/main-concept/event-handling.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Data Binding",permalink:"/docs/main-concept/data-binding"},next:{title:"Observed Attributes",permalink:"/docs/main-concept/observed-attributes"}},l={},s=[{value:"Syntax",id:"syntax",level:2},{value:"Function Parameters",id:"function-parameters",level:2},{value:"Event Variable",id:"event-variable",level:2}],p={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"event-handling"},"Event Handling"),(0,a.kt)("p",null,"Event handling is a directive that allows a component to respond to user actions on the UI, such as button clicks, text inputs, dragging elements, and other actions. It uses a directive with the namespace of on or on-prevent to bind a function to an element as an event listener."),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,"The syntax for the event handling directive is ",(0,a.kt)("inlineCode",{parentName:"p"},"on:<event_name>={<function>}"),". We can also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"on-prevent")," namespace to top the default action of an element from happening. It uses ",(0,a.kt)("inlineCode",{parentName:"p"},"event.preventDefault()")," function in the background."),(0,a.kt)("p",null,"Example."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export function Greeting() {\n\n    const clickMe = () => {\n        console.log('Hello World!');\n    }\n\n    return <button on:click={clickMe}>Greet</button>\n}\n")),(0,a.kt)("h2",{id:"function-parameters"},"Function Parameters"),(0,a.kt)("p",null,"Since the directive value for event handling is a function, we can pass arguments to the function by using a fat arrow function and passing the event handler to its body."),(0,a.kt)("p",null,"Example."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export function Greeting() {\n\n    const clickMe = (name: string) => {\n        console.log(`Hello ${name}!`);\n    }\n\n    return <button on:click={()=> clickMe('John')}>Greet</button>\n}\n")),(0,a.kt)("h2",{id:"event-variable"},"Event Variable"),(0,a.kt)("p",null,"We can also obtain the event variable that contains data about the event, as shown in the following example."),(0,a.kt)("p",null,"Example."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export function Greeting() {\n\n    const clickMe = (event) => {\n        console.log(event);\n    }\n\n    return <button on:click={(event) => clickMe(event)}>Greet</button>\n}\n")),(0,a.kt)("p",null,"or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export function Greeting() {\n\n    const clickMe = (event) => {\n        console.log(event);\n    }\n\n    return <button on:click={clickMe}>Greet</button>\n}\n")),(0,a.kt)("p",null,"will have the same result."))}d.isMDXComponent=!0}}]);