"use strict";(self.webpackChunk_monster_js_docs=self.webpackChunk_monster_js_docs||[]).push([[630],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(n),g=o,v=l["".concat(s,".").concat(g)]||l[g]||m[g]||i;return n?r.createElement(v,a(a({ref:t},u),{},{components:n})):r.createElement(v,a({ref:t},u))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8291:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:3.5},a="Event Emitter",c={unversionedId:"main-concept/event-emitter",id:"main-concept/event-emitter",title:"Event Emitter",description:"MonsterJS provides an event emitter that can be shared among different components. This emitter is used to notify other components when a specific event is triggered.",source:"@site/docs/main-concept/event-emitter.md",sourceDirName:"main-concept",slug:"/main-concept/event-emitter",permalink:"/docs/main-concept/event-emitter",draft:!1,editUrl:"https://github.com/monster-js/documentation/docs/main-concept/event-emitter.md",tags:[],version:"current",sidebarPosition:3.5,frontMatter:{sidebar_position:3.5},sidebar:"tutorialSidebar",previous:{title:"Component States",permalink:"/docs/main-concept/component-states"},next:{title:"Change Detection",permalink:"/docs/main-concept/change-detection"}},s={},p=[{value:"Creating an Event Emitter",id:"creating-an-event-emitter",level:2},{value:"Triggering the Event",id:"triggering-the-event",level:2},{value:"Subscribing to the Event",id:"subscribing-to-the-event",level:2}],u={toc:p},l="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"event-emitter"},"Event Emitter"),(0,o.kt)("p",null,"MonsterJS provides an event emitter that can be shared among different components. This emitter is used to notify other components when a specific event is triggered."),(0,o.kt)("h2",{id:"creating-an-event-emitter"},"Creating an Event Emitter"),(0,o.kt)("p",null,"To create an event emitter, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"createEventEmitter")," function."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { createEventEmitter } from "@monster-js/core";\n\nexport const routeChangeEvent = createEventEmitter();\n')),(0,o.kt)("p",null,"Now, you can import the ",(0,o.kt)("inlineCode",{parentName:"p"},"routeChangeEvent")," function into your component.\nThis function accepts the component's ",(0,o.kt)("inlineCode",{parentName:"p"},"this")," context as an argument.\nIt returns a function to trigger the event and a function to subscribe to the event."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { routeChangeEvent } from './route-change.event';\n\nexport function App() {\n    const [trigger, subscribe] = routeChangeEvent(this);\n\n    return <h1>App Component</h1>\n}\n")),(0,o.kt)("h2",{id:"triggering-the-event"},"Triggering the Event"),(0,o.kt)("p",null,"To trigger the event, simply call the trigger function returned by the event emitter function."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { routeChangeEvent } from './route-change.event';\n\nexport function App() {\n\n    const [trigger, subscribe] = routeChangeEvent(this);\n\n    const triggerEvent = () => {\n        trigger();\n    }\n\n    return <button on:click={triggerEvent}>Trigger event</button>\n}\n")),(0,o.kt)("p",null,"You can also pass optional data to the event, which will be received by the subscribers."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { routeChangeEvent } from './route-change.event';\n\nexport function App() {\n\n    const [trigger, subscribe] = routeChangeEvent(this);\n\n    const triggerEvent = () => {\n        trigger('Triggered in app component.');\n    }\n\n    return <button on:click={triggerEvent}>Trigger event</button>\n}\n")),(0,o.kt)("h2",{id:"subscribing-to-the-event"},"Subscribing to the Event"),(0,o.kt)("p",null,"To subscribe to the event, use the subscribe function returned by the event emitter function."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { routeChangeEvent } from './route-change.event';\n\nexport function App() {\n\n    const [trigger, subscribe] = routeChangeEvent(this);\n\n    subscribe(this, () => {\n        console.log('The event is triggered.');\n    });\n\n    return <h1>App Component</h1>\n}\n")),(0,o.kt)("p",null,"You can also retrieve the data passed by the trigger function within the subscriber."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { routeChangeEvent } from './route-change.event';\n\nexport function App() {\n\n    const [trigger, subscribe] = routeChangeEvent(this);\n\n    subscribe(this, (message) => {\n        console.log(message);\n    });\n\n    return <h1>App Component</h1>\n}\n")))}m.isMDXComponent=!0}}]);