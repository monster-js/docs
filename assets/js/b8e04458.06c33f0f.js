"use strict";(self.webpackChunk_monster_js_docs=self.webpackChunk_monster_js_docs||[]).push([[497],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,l(l({ref:t},s),{},{components:n})):r.createElement(f,l({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:o,l[1]=c;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9559:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:3},l="Create MonsterJS Application",c={unversionedId:"cli/cli-create-application",id:"cli/cli-create-application",title:"Create MonsterJS Application",description:"To create a new application using the CLI, we just need to run the command mn new .",source:"@site/docs/cli/cli-create-application.md",sourceDirName:"cli",slug:"/cli/cli-create-application",permalink:"/docs/docs/cli/cli-create-application",draft:!1,editUrl:"https://github.com/monster-js/documentation/docs/cli/cli-create-application.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"CLI Installation",permalink:"/docs/docs/cli/cli-installation"},next:{title:"Local Development Server",permalink:"/docs/docs/cli/cli-local-development-server"}},i={},p=[{value:"Local development",id:"local-development",level:2}],s={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"create-monsterjs-application"},"Create MonsterJS Application"),(0,o.kt)("p",null,"To create a new application using the CLI, we just need to run the command ",(0,o.kt)("inlineCode",{parentName:"p"},"mn new <project-name>"),"."),(0,o.kt)("p",null,"Example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mn new my-app\n")),(0,o.kt)("p",null,"Running this command will generate the MonsterJS files needed to create an application and automatically install the npm packages. Once the installation of the packages is complete, we now have a new MonsterJS application."),(0,o.kt)("h2",{id:"local-development"},"Local development"),(0,o.kt)("p",null,"To run a local development server for our project, we need to open a CLI, change directory to the root of the project, and run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mn serve\n")),(0,o.kt)("p",null,"After the command is done, we can now view our application by pointing our browsers to ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:4000"},"http://localhost:4000"),". The port 4000 can be changed by adding a ",(0,o.kt)("inlineCode",{parentName:"p"},"--port")," option to the command."),(0,o.kt)("p",null,"Example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mn serve --port 4001\n")))}m.isMDXComponent=!0}}]);